<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.bno2.mapper.ProjectUserMapper">

    <select id="selectProjectUsers" resultType="com.example.bno2.dto.ProjectUser">
        SELECT p.uid                AS projectUid,
               p.project_name       AS projectName,
               p.project_state_code AS stateCode,
               u.pn                 AS userPn,
               u.name               AS userName,
               pu.role              AS role,
               pu.role_detail       AS roleDetail,
               p.project_detail     AS projectDetail
          FROM project p
          JOIN project_user pu ON p.uid = pu.project_uid
          JOIN user u ON pu.user_pn = u.pn
         WHERE pu.user_pn != 1
           AND (TRIM(u.name) LIKE CONCAT('%',#{userName},'%') OR #{userName} IS NULL)
           AND (TRIM(project_name) LIKE CONCAT('%',#{projectName},'%') OR #{projectName} IS NULL)
           <if test="stateCode != 'ALL'">
           AND project_state_code = #{stateCode}
           </if>
        ORDER BY CASE p.project_state_code
        WHEN 'WAT' THEN 1
        WHEN 'ING' THEN 2
        WHEN 'COM' THEN 3
        ELSE 4
        END,
        p.project_name,
        u.name;
    </select>
    <insert id="insertProjectTeam">
        INSERT INTO project_user(project_uid,
                                 user_pn,
                                 role,
                                 role_detail)
                          VALUES(#{projectUid},
                                 #{userPn},
                                 #{role},
                                 #{roleDetail})
    </insert>

    <update id="updateProjectUser">
        UPDATE project_user
           SET role = #{role},
               role_detail = #{roleDetail}
         WHERE project_uid = #{projectUid}
           AND user_pn = #{userPn}
    </update>

<!--    <update id="updateProjectAddTeam">-->
<!--        UPDATE project_user-->
<!--            SET-->
<!--        -->
<!--    </update>-->

<!--    <select id="selectProjectUsersData" resultType="com.example.bno2.dto.ProjectUser">-->
<!--        SELECT project_uid, user_pn-->
<!--          FROM project_user-->
<!--    </select>-->

    <!-- 프로젝트 사용자 삭제 -->
    <delete id="deleteProjectUser">
        DELETE FROM project_user
              WHERE project_uid = #{projectUid}
                AND user_pn = #{userPn}
    </delete>

    <select id="existsInProject" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM project_user
        WHERE project_uid = #{projectUid} AND user_pn = #{userPn}
    </select>
</mapper>